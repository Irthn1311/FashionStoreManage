/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens.PhieuNhap;

import javax.swing.UIManager;
import java.util.List;
import DTO.PhieuNhapDTO;
import BUS.PhieuNhapBUS;
import screens.PhieuNhap.ThemPhieuNhapDialog;
import java.text.SimpleDateFormat;
import java.util.Date;
import DAO.SanPhamDAO;
import DAO.NhaCungCapDAO;
import java.util.ArrayList;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.JOptionPane;
import utils.FileUtils;
import javax.swing.JEditorPane;
import java.text.DecimalFormat;
import java.sql.Timestamp;

/**
 *
 * @author nson9
 */
public class phieunhap extends javax.swing.JPanel {
    private PhieuNhapBUS phieuNhapBUS;

    /**
     * Creates new form sanpham
     */
    public phieunhap() {
        phieuNhapBUS = new PhieuNhapBUS();
        initComponents();
        loadPhieuNhapTable();
    }
    
    public javax.swing.JPanel getPhieuNhapPanel() {
        return containerPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        // Khởi tạo panel chính
        containerPanel = new javax.swing.JPanel();
        containerPanel.setPreferredSize(new java.awt.Dimension(1000, 700));
        containerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        // Khởi tạo các components
        jButton1 = new javax.swing.JButton();
        pnlHeader = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnPrinter = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jButton30 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        pnlHeader.setBackground(new java.awt.Color(12, 150, 156));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Chi tiết phiếu nhập");

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                .addContainerGap(411, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(387, 387, 387))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        containerPanel.add(pnlHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 70));

        pnlContent.setBackground(new java.awt.Color(107, 163, 190));

        jPanel17.setBackground(new java.awt.Color(107, 163, 190));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Chỉnh sửa"));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton31.setText("Thêm ");
        jPanel17.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 24, -1, 49));

        jButton31.addActionListener(this::jButton31ActionPerformed);

        jButton32.setText("Sửa");
        jPanel17.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 24, -1, 49));
        jButton32.addActionListener(this::jButton32ActionPerformed);

        jButton33.setText("Xóa");
        jPanel17.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 24, -1, 49));

        jButton33.addActionListener(this::jButton33ActionPerformed);

        jPanel18.setBackground(new java.awt.Color(107, 163, 190));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bảng thông tin"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã PN", "Mã SP", "Mã NCC", "Số lượng", "Đơn giá", "Thành tiền", "Thời gian", "Trạng thái", "Hình thức thanh toán", "Chi tiết"
            }
        ));
        jTable2.setShowGrid(true);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        // Setup buttons for export, import and print
        btnExport.setText("Xuất file phiếu nhập");
        ImageIcon exportIcon = new ImageIcon("src/icon_img/export_icon.png");
        btnExport.setIcon(new ImageIcon(exportIcon.getImage().getScaledInstance(24, 24, java.awt.Image.SCALE_SMOOTH)));
        btnExport.setHorizontalTextPosition(SwingConstants.RIGHT);
        btnExport.setPreferredSize(new java.awt.Dimension(340, 40));
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utils.FileUtils.showExportOptionsForPhieuNhap(jTable2, "DanhSachPhieuNhap");
            }
        });

        btnImport = new javax.swing.JButton("Import");
        ImageIcon importIcon = new ImageIcon("src/icon_img/import_icon.png");
        btnImport.setIcon(new ImageIcon(importIcon.getImage().getScaledInstance(24, 24, java.awt.Image.SCALE_SMOOTH)));
        btnImport.setHorizontalTextPosition(SwingConstants.RIGHT);
        btnImport.setPreferredSize(new java.awt.Dimension(100, 40));
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utils.FileUtils.importFromExcelForPhieuNhap(jTable2);
                loadPhieuNhapTable(); // Refresh the table after import
            }
        });

        btnPrinter = new javax.swing.JButton("In");
        ImageIcon printIcon = new ImageIcon("src/icon_img/print_icon.png");
        btnPrinter.setIcon(new ImageIcon(printIcon.getImage().getScaledInstance(24, 24, java.awt.Image.SCALE_SMOOTH)));
        btnPrinter.setHorizontalTextPosition(SwingConstants.RIGHT);
        btnPrinter.setPreferredSize(new java.awt.Dimension(100, 40));
        btnPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    List<PhieuNhapDTO> phieuNhapList = phieuNhapBUS.getAllPhieuNhap();

                    if (phieuNhapList == null || phieuNhapList.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Không có dữ liệu phiếu nhập để in.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }

                    StringBuilder htmlContent = new StringBuilder();
                    htmlContent.append("<html><head><style>");
                    htmlContent.append("body { font-family: Arial, sans-serif; margin: 20px; }");
                    htmlContent.append("h1 { text-align: center; color: #333; }");
                    htmlContent.append(".entry-record { border: 1px solid #ccc; padding: 10px; margin-bottom: 15px; border-radius: 5px; page-break-inside: avoid; }");
                    htmlContent.append(".field-label { font-weight: bold; color: #555; }");
                    htmlContent.append("p { margin: 5px 0; }");
                    htmlContent.append("</style></head><body>");
                    htmlContent.append("<h1>Danh Sách Chi Tiết Phiếu Nhập</h1>");

                    SimpleDateFormat timestampFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                    DecimalFormat decimalFormat = new DecimalFormat("#,###.##");

                    for (PhieuNhapDTO pn : phieuNhapList) {
                        htmlContent.append("<div class='entry-record'>");
                        htmlContent.append("<p><span class='field-label'>Mã Phiếu Nhập:</span> ").append(pn.getMaPhieuNhap() != null ? pn.getMaPhieuNhap() : "").append("</p>");
                        htmlContent.append("<p><span class='field-label'>Mã Sản Phẩm:</span> ").append(pn.getMaSanPham() != null ? pn.getMaSanPham() : "").append("</p>");
                        htmlContent.append("<p><span class='field-label'>Mã Nhà Cung Cấp:</span> ").append(pn.getMaNhaCungCap() != null ? pn.getMaNhaCungCap() : "").append("</p>");
                        htmlContent.append("<p><span class='field-label'>Số Lượng:</span> ").append(decimalFormat.format(pn.getSoLuong())).append("</p>");
                        htmlContent.append("<p><span class='field-label'>Đơn Giá:</span> ").append(decimalFormat.format(pn.getDonGia())).append("</p>");
                        htmlContent.append("<p><span class='field-label'>Thành Tiền:</span> ").append(decimalFormat.format(pn.getThanhTien())).append("</p>");
                        htmlContent.append("<p><span class='field-label'>Thời Gian:</span> ").append(pn.getThoiGian() != null ? timestampFormat.format(pn.getThoiGian()) : "").append("</p>");
                        htmlContent.append("<p><span class='field-label'>Trạng Thái:</span> ").append(pn.getTrangThai() != null ? pn.getTrangThai() : "").append("</p>");
                        htmlContent.append("<p><span class='field-label'>Hình Thức Thanh Toán:</span> ").append(pn.getHinhThucThanhToan() != null ? pn.getHinhThucThanhToan() : "").append("</p>");
                        htmlContent.append("</div>");
                    }
                    htmlContent.append("</body></html>");

                    JEditorPane editorPane = new JEditorPane();
                    editorPane.setContentType("text/html");
                    editorPane.setText(htmlContent.toString());
                    editorPane.setEditable(false);

                    boolean printed = editorPane.print();
                    if (!printed) {
                        // JOptionPane.showMessageDialog(null, "Lệnh in đã bị hủy.", "In Bị Hủy", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (java.awt.print.PrinterException pe) {
                    JOptionPane.showMessageDialog(null, "Lỗi khi in: Không tìm thấy máy in hoặc lỗi máy in.\\n" + pe.getMessage(), "Lỗi In Ấn", JOptionPane.ERROR_MESSAGE);
                    pe.printStackTrace();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Lỗi khi chuẩn bị dữ liệu để in: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                     e.printStackTrace();
                }
            }
        });

        jPanel33.setBackground(new java.awt.Color(107, 163, 190));
        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tìm kiếm\n"));
        jPanel33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton30.setText("Tìm kiếm");
        jPanel33.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 90, 36));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Tìm kiếm");
        jPanel33.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã PN", "Mã SP", "Mã NCC", "Trạng thái" }));
        jPanel33.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 300, 30));
        jPanel33.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 320, 30));

        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(323, 323, 323))
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        containerPanel.add(pnlContent, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1000, 630));

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(containerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 700));

        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable2.rowAtPoint(evt.getPoint());
                int col = jTable2.columnAtPoint(evt.getPoint());
                if (col == 10) { // Cột 'Chi tiết'
                    String maPN = jTable2.getValueAt(row, 1).toString();
                    PhieuNhapDTO phieuNhap = phieuNhapBUS.getPhieuNhap(maPN);
                    new ChiTietPhieuNhapDialog(null, phieuNhap).setVisible(true);
                }
            }
        });

        // Thêm sự kiện cho nút Tìm kiếm
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemPhieuNhap();
            }
        });

        jTextField1.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkEmpty();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                checkEmpty();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                checkEmpty();
            }
            private void checkEmpty() {
                if (jTextField1.getText().trim().isEmpty()) {
                    loadPhieuNhapTable();
                }
            }
        });
    }

    private void loadPhieuNhapTable() {
        List<PhieuNhapDTO> danhSachPhieuNhap = phieuNhapBUS.getAllPhieuNhap();
        
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        
        int stt = 1;
        for (PhieuNhapDTO phieuNhap : danhSachPhieuNhap) {
            model.addRow(new Object[]{
                stt++,
                phieuNhap.getMaPhieuNhap(),
                phieuNhap.getMaSanPham(),
                phieuNhap.getMaNhaCungCap(),
                phieuNhap.getSoLuong(),
                phieuNhap.getDonGia(),
                phieuNhap.getThanhTien(),
                phieuNhap.getThoiGian(),
                phieuNhap.getTrangThai(),
                phieuNhap.getHinhThucThanhToan(),
                "Xem chi tiết"
            });
        }
    }

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {
        ThemPhieuNhapDialog dialog = new ThemPhieuNhapDialog(null);
        dialog.setVisible(true);

        if (dialog.isSaved()) {
            PhieuNhapDTO newPhieuNhap = dialog.getNewPhieuNhap();
            if (phieuNhapBUS.createPhieuNhap(newPhieuNhap)) {
                javax.swing.JOptionPane.showMessageDialog(null, "Thêm phiếu nhập thành công!");
                loadPhieuNhapTable();
            } else {
                javax.swing.JOptionPane.showMessageDialog(null, "Thêm phiếu nhập thất bại!");
            }
        }
    }

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Vui lòng chọn phiếu nhập cần sửa!");
            return;
        }

        PhieuNhapDTO phieuNhap = phieuNhapBUS.getPhieuNhap(jTable2.getValueAt(selectedRow, 1).toString());
        if (phieuNhap != null) {
            // Lấy danh sách mã sản phẩm
            SanPhamDAO sanPhamDAO = new SanPhamDAO();
            java.util.List<String> dsMaSP = sanPhamDAO.getAllMaSanPham();
            // Lấy danh sách mã nhà cung cấp
            NhaCungCapDAO nhaCungCapDAO = new NhaCungCapDAO();
            java.util.List<String> dsMaNCC = nhaCungCapDAO.getAllSuppliers();
            // Mở dialog sửa chi tiết phiếu nhập
            SuaPhieuNhapDialog dialog = new SuaPhieuNhapDialog(null, phieuNhap, dsMaSP, dsMaNCC);
            dialog.setVisible(true);

            if (dialog.isSaved()) {
                PhieuNhapDTO updated = dialog.getUpdatedPhieuNhap();
                if (phieuNhapBUS.updatePhieuNhap(updated)) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Cập nhật thành công!");
                    loadPhieuNhapTable();
                } else {
                    javax.swing.JOptionPane.showMessageDialog(null, "Cập nhật thất bại!");
                }
            }
        }
    }

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(null, "Vui lòng chọn một dòng để xóa!");
            return;
        }
        String maPN = jTable2.getValueAt(selectedRow, 1).toString();
        int confirm = javax.swing.JOptionPane.showConfirmDialog(null, 
            "Bạn có chắc chắn muốn xóa phiếu nhập này?", 
            "Xác nhận xóa", 
            javax.swing.JOptionPane.YES_NO_OPTION);
            
        if (confirm == javax.swing.JOptionPane.YES_OPTION) {
            try {
                if (phieuNhapBUS.deletePhieuNhap(maPN)) {
                    javax.swing.JOptionPane.showMessageDialog(null, "Xóa thành công!");
                    loadPhieuNhapTable();
                } else {
                    javax.swing.JOptionPane.showMessageDialog(null, "Xóa thất bại!");
                }
            } catch (RuntimeException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }

    private Date parseDate(String dateStr) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            return sdf.parse(dateStr);
        } catch (Exception e) {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                return sdf.parse(dateStr);
            } catch (Exception ex) {
                return new Date(); // Return current date if parsing fails
            }
        }
    }

    // Hàm tìm kiếm phiếu nhập
    private void timKiemPhieuNhap() {
        String truong = jComboBox1.getSelectedItem().toString();
        String keyword = jTextField1.getText().trim();
        String dbField = "";
        switch (truong) {
            case "Mã PN": dbField = "maPhieuNhap"; break;
            case "Mã SP": dbField = "maSanPham"; break;
            case "Mã NCC": dbField = "maNhaCungCap"; break;
            case "Trạng thái": dbField = "trangThai"; break;
            default: dbField = "maPhieuNhap";
        }
        List<PhieuNhapDTO> danhSachPhieuNhap = phieuNhapBUS.getAllPhieuNhap();
        List<PhieuNhapDTO> ketQua = new ArrayList<>();
        if (keyword.isEmpty()) {
            ketQua = danhSachPhieuNhap;
        } else {
            for (PhieuNhapDTO pn : danhSachPhieuNhap) {
                String value = "";
                switch (dbField) {
                    case "maPhieuNhap": value = pn.getMaPhieuNhap(); break;
                    case "maSanPham": value = pn.getMaSanPham(); break;
                    case "maNhaCungCap": value = pn.getMaNhaCungCap(); break;
                    case "trangThai": value = pn.getTrangThai(); break;
                }
                if (value != null && value.toLowerCase().contains(keyword.toLowerCase())) {
                    ketQua.add(pn);
                }
            }
        }
        // Cập nhật lại bảng
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        int stt = 1;
        for (PhieuNhapDTO phieuNhap : ketQua) {
            model.addRow(new Object[]{
                stt++,
                phieuNhap.getMaPhieuNhap(),
                phieuNhap.getMaSanPham(),
                phieuNhap.getMaNhaCungCap(),
                phieuNhap.getSoLuong(),
                phieuNhap.getDonGia(),
                phieuNhap.getThanhTien(),
                phieuNhap.getThoiGian(),
                phieuNhap.getTrangThai(),
                phieuNhap.getHinhThucThanhToan(),
                "Xem chi tiết"
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(phieunhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(phieunhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(phieunhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(phieunhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new phieunhap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel containerPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnPrinter;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlHeader;
    // End of variables declaration//GEN-END:variables
}
